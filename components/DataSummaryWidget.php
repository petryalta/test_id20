<?php

namespace app\components;

use yii\base\Widget;
use yii\db\Query;
use yii\helpers\Html;


class DataSummaryWidget extends Widget
{

    public $data;
    public $tableName = 'data';

    private $months;

    public function init()
    {
        parent::init();
        $this->months = require __DIR__ . '/months.php'; // ToDo: переделать через Yii::t()
        if (is_null($this->data)) {
            $this->fetchData();
        }
    }

    /**
     * Get summury information
     */
    private function fetchData()
    {
        $this->data = (new Query())->select(['year' => 'YEAR(date)', 'month' => 'MONTH(date)', 'counts' => 'count(*)'])
            ->from(self::tableName())
            ->where($filter)
            ->groupBy('YEAR(date),MONTH(date) with ROLLUP')
            ->all();
    }

    public function run()
    {
        parent::run(); // TODO: Change the autogenerated stub
        $yearSummary = $this->getYearSummary($this->data);
        if ($yearSummary === false) {
            echo "Not found";
            return;
        }

        $this->renderYearSummary($yearSummary);
        $total = count($this->data);
        for ($i = 0; $i < $total; $i++) {
            $item = array_shift($this->data);
            if (is_null($item['year']) && is_null($item['month'])) continue;
            if (($item['year'] !== '' || !is_null($item['year'])) && ($item['month'] == '' || is_null($item['month'])) && (int)$item['year'] !== (int)$yearSummary['year']) {
                $this->renderYearSummary($item);
                continue;
            }
            if ($item['month'] == '') continue;

            $this->renderItem($item);
        }
    }

    private function getYearSummary($ar)
    {
        foreach ($ar as $item) {
            if ($item['month'] == '') {
                return ['year' => $item['year'], 'counts' => $item['counts']];
            }
        }
        return false;
    }

    private function renderYearSummary($data)
    {
        echo Html::beginTag('div', ['class' => 'row']);
        echo Html::beginTag('strong');
        echo $data['year'] . '&nbsp;(' . $data['counts'] . ')';
        echo Html::endTag('strong');
        echo Html::endTag('div');

    }

    private function renderItem($item)
    {
        echo Html::beginTag('div', ['class' => 'row']);
        $monthNumber = (int)$item['month'];
        echo $this->months[$monthNumber - 1] . '&nbsp; (' . $item['counts'] . ')';
        echo Html::endTag('div');

    }

}